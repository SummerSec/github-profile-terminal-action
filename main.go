package main

import (
	"context"
	"fmt"
	"os"
	"os/exec"
	"time"

	"github.com/liamg/github-profile-magic-action/config"
	"github.com/liamg/github-profile-magic-action/profile"
)

const outputDir = "."

func main() {

	conf, err := config.Derive()
	if err != nil {
		fail("Configuration error: %s", err)
	}

	ctx, cancel := context.WithTimeout(context.Background(), time.Second*30)
	defer cancel()

	if err := profile.New(conf).Generate(ctx, outputDir); err != nil {
		fail("Failed to generate profile: %s", err)
	}

	_ = run("ls", "-la")

	if err := run("git", "add", "."); err != nil {
		fail("failed to add files to git: %s", err)
	}

	if err := run("git", "-c", "user.name=bot", "-c", "user.email=bot@github.com", "commit", "-a", "-m", "Generated by actions"); err != nil {
		fail("failed to commit files to git: %s", err)
	}

	if err := run("git", "push"); err != nil {
		fail("failed to push files to git: %s", err)
	}
}

func fail(format string, args ...interface{}) {
	_, _ = fmt.Fprintf(os.Stderr, format+"\n", args...)
	os.Exit(1)
}

func run(cmd string, args ...string) error {
	c := exec.Command(cmd, args...)
	c.Stderr = os.Stderr
	c.Stdout = os.Stdout
	return c.Run()
}
